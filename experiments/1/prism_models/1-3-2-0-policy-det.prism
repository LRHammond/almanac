dtmc


const int eps_1_1 = 3;


module INIT

    i : bool init false;
    [initialisation] !i -> 1.0:(i'=true);

endmodule


module SYNC

    t : bool init true;
    [initialisation] !i -> 1.0:(t' = false);
    [action] !t -> 1.0:(t' = true);
    [transition] t -> 1.0:(t' = false);

endmodule


module STATE_0

    s0 : [0..2] init 2;
    [initialisation] !i -> 0.11945843696594238:(s0'=0) + 0.8805415630340576:(s0'=1);
    [transition] true & (a0=0 & a1=0 & a2=0) -> ((0.060156822204589844*s0)/max(0.0, (0.060156822204589844*s0))):(s0'=1) + (1.0 - ((0.060156822204589844*s0)/max(0.0, (0.060156822204589844*s0)))):(s0'=0);
    [transition] true & (a0=1 & a1=0 & a2=0) -> ((0.3920321464538574*s0)/max(0.0, (0.3920321464538574*s0))):(s0'=1) + (1.0 - ((0.3920321464538574*s0)/max(0.0, (0.3920321464538574*s0)))):(s0'=0);
    [transition] true & (a0=2 & a1=0 & a2=0) -> ((0.3920321464538574*s0)/max(0.0, (0.3920321464538574*s0))):(s0'=1) + (1.0 - ((0.3920321464538574*s0)/max(0.0, (0.3920321464538574*s0)))):(s0'=0);
    [transition] true & (a0=0 & a1=1 & a2=0) -> ((0.10206961631774902*s0)/max(0.0, (0.10206961631774902*s0))):(s0'=1) + (1.0 - ((0.10206961631774902*s0)/max(0.0, (0.10206961631774902*s0)))):(s0'=0);
    [transition] true & (a0=1 & a1=1 & a2=0) -> ((1.0*s0)/max(0.0, (1.0*s0))):(s0'=1) + (1.0 - ((1.0*s0)/max(0.0, (1.0*s0)))):(s0'=0);
    [transition] true & (a0=2 & a1=1 & a2=0) -> ((0.3920321464538574*s0)/max(0.0, (0.3920321464538574*s0))):(s0'=1) + (1.0 - ((0.3920321464538574*s0)/max(0.0, (0.3920321464538574*s0)))):(s0'=0);
    [transition] true & (a0=0 & a1=2 & a2=0) -> ((1.0*s0)/max(0.0, (1.0*s0))):(s0'=1) + (1.0 - ((1.0*s0)/max(0.0, (1.0*s0)))):(s0'=0);
    [transition] true & (a0=1 & a1=2 & a2=0) -> ((0.060156822204589844*s0)/max(0.0, (0.060156822204589844*s0))):(s0'=1) + (1.0 - ((0.060156822204589844*s0)/max(0.0, (0.060156822204589844*s0)))):(s0'=0);
    [transition] true & (a0=2 & a1=2 & a2=0) -> ((0.060156822204589844*s0)/max(0.0, (0.060156822204589844*s0))):(s0'=1) + (1.0 - ((0.060156822204589844*s0)/max(0.0, (0.060156822204589844*s0)))):(s0'=0);
    [transition] true & (a0=0 & a1=0 & a2=1) -> ((0.060156822204589844*s0)/max(0.0, (0.060156822204589844*s0))):(s0'=1) + (1.0 - ((0.060156822204589844*s0)/max(0.0, (0.060156822204589844*s0)))):(s0'=0);
    [transition] true & (a0=1 & a1=0 & a2=1) -> ((0.060156822204589844*s0)/max(0.0, (0.060156822204589844*s0))):(s0'=1) + (1.0 - ((0.060156822204589844*s0)/max(0.0, (0.060156822204589844*s0)))):(s0'=0);
    [transition] true & (a0=2 & a1=0 & a2=1) -> ((0.10206961631774902*s0)/max(0.0, (0.10206961631774902*s0))):(s0'=1) + (1.0 - ((0.10206961631774902*s0)/max(0.0, (0.10206961631774902*s0)))):(s0'=0);
    [transition] true & (a0=0 & a1=1 & a2=1) -> ((0.060156822204589844*s0)/max(0.0, (0.060156822204589844*s0))):(s0'=1) + (1.0 - ((0.060156822204589844*s0)/max(0.0, (0.060156822204589844*s0)))):(s0'=0);
    [transition] true & (a0=1 & a1=1 & a2=1) -> ((1.0*s0)/max(0.0, (1.0*s0))):(s0'=1) + (1.0 - ((1.0*s0)/max(0.0, (1.0*s0)))):(s0'=0);
    [transition] true & (a0=2 & a1=1 & a2=1) -> ((0.10206961631774902*s0)/max(0.0, (0.10206961631774902*s0))):(s0'=1) + (1.0 - ((0.10206961631774902*s0)/max(0.0, (0.10206961631774902*s0)))):(s0'=0);
    [transition] true & (a0=0 & a1=2 & a2=1) -> ((1.0*s0)/max(0.0, (1.0*s0))):(s0'=1) + (1.0 - ((1.0*s0)/max(0.0, (1.0*s0)))):(s0'=0);
    [transition] true & (a0=1 & a1=2 & a2=1) -> ((0.060156822204589844*s0)/max(0.0, (0.060156822204589844*s0))):(s0'=1) + (1.0 - ((0.060156822204589844*s0)/max(0.0, (0.060156822204589844*s0)))):(s0'=0);
    [transition] true & (a0=2 & a1=2 & a2=1) -> ((0.060156822204589844*s0)/max(0.0, (0.060156822204589844*s0))):(s0'=1) + (1.0 - ((0.060156822204589844*s0)/max(0.0, (0.060156822204589844*s0)))):(s0'=0);
    [transition] (a0=eps_1_1 | a1=eps_1_1 | a2=eps_1_1) -> 1.0:(s0'=s0);

endmodule

// G ((!phi) | (X (chi)))
module SPEC_0

    q0 : [0..2] init 0;
    [transition] q0=0 & !chi & !phi -> 1.0:(q0'=0);
    [transition] q0=0 & chi & !phi -> 1.0:(q0'=0);
    [transition] q0=0 & !chi & phi -> 1.0:(q0'=1);
    [transition] q0=0 & chi & phi -> 1.0:(q0'=1);
    [transition] q0=1 & !chi & !phi -> 1.0:(q0'=2);
    [transition] q0=1 & chi & !phi -> 1.0:(q0'=0);
    [transition] q0=1 & !chi & phi -> 1.0:(q0'=2);
    [transition] q0=1 & chi & phi -> 1.0:(q0'=1);
    [transition] q0=2 & !chi & !phi -> 1.0:(q0'=2);
    [transition] q0=2 & chi & !phi -> 1.0:(q0'=2);
    [transition] q0=2 & !chi & phi -> 1.0:(q0'=2);
    [transition] q0=2 & chi & phi -> 1.0:(q0'=2);

endmodule

// F G ((!phi) | (!xi))
module SPEC_1

    q1 : [0..2] init 0;
    [transition] q1=0 & (a0=eps_1_1 | a1=eps_1_1 | a2=eps_1_1) -> 1.0:(q1'=1);
    [transition] q1=0 & !xi & !phi & !(a0=eps_1_1 | a1=eps_1_1 | a2=eps_1_1) -> 1.0:(q1'=0);
    [transition] q1=0 & !xi & phi & !(a0=eps_1_1 | a1=eps_1_1 | a2=eps_1_1) -> 1.0:(q1'=0);
    [transition] q1=0 & xi & !phi & !(a0=eps_1_1 | a1=eps_1_1 | a2=eps_1_1) -> 1.0:(q1'=0);
    [transition] q1=0 & xi & phi & !(a0=eps_1_1 | a1=eps_1_1 | a2=eps_1_1) -> 1.0:(q1'=0);
    [transition] q1=1 & !xi & !phi -> 1.0:(q1'=1);
    [transition] q1=1 & !xi & phi -> 1.0:(q1'=1);
    [transition] q1=1 & xi & !phi -> 1.0:(q1'=1);
    [transition] q1=1 & xi & phi -> 1.0:(q1'=2);
    [transition] q1=2 & !xi & !phi -> 1.0:(q1'=2);
    [transition] q1=2 & !xi & phi -> 1.0:(q1'=2);
    [transition] q1=2 & xi & !phi -> 1.0:(q1'=2);
    [transition] q1=2 & xi & phi -> 1.0:(q1'=2);

endmodule


module ACTION_0

    a0 : [-1..3] init -1;
    [action] s0=0 & q0=0 & q1=0 -> 1.0:(a0'=0);
    [action] s0=0 & q0=0 & q1=1 -> 1.0:(a0'=0);
    [action] s0=0 & q0=0 & q1=2 -> 1.0:(a0'=0);
    [action] s0=0 & q0=1 & q1=0 -> 1.0:(a0'=0);
    [action] s0=0 & q0=1 & q1=1 -> 1.0:(a0'=0);
    [action] s0=0 & q0=1 & q1=2 -> 1.0:(a0'=0);
    [action] s0=0 & q0=2 & q1=0 -> 1.0:(a0'=0);
    [action] s0=0 & q0=2 & q1=1 -> 1.0:(a0'=0);
    [action] s0=0 & q0=2 & q1=2 -> 1.0:(a0'=0);
    [action] s0=1 & q0=0 & q1=0 -> 1.0:(a0'=0);
    [action] s0=1 & q0=0 & q1=1 -> 1.0:(a0'=0);
    [action] s0=1 & q0=0 & q1=2 -> 1.0:(a0'=0);
    [action] s0=1 & q0=1 & q1=0 -> 1.0:(a0'=0);
    [action] s0=1 & q0=1 & q1=1 -> 1.0:(a0'=0);
    [action] s0=1 & q0=1 & q1=2 -> 1.0:(a0'=0);
    [action] s0=1 & q0=2 & q1=0 -> 1.0:(a0'=0);
    [action] s0=1 & q0=2 & q1=1 -> 1.0:(a0'=0);
    [action] s0=1 & q0=2 & q1=2 -> 1.0:(a0'=0);

endmodule


module ACTION_1

    a1 : [-1..3] init -1;
    [action] s0=0 & q0=0 & q1=0 -> 1.0:(a1'=1);
    [action] s0=0 & q0=0 & q1=1 -> 1.0:(a1'=1);
    [action] s0=0 & q0=0 & q1=2 -> 1.0:(a1'=1);
    [action] s0=0 & q0=1 & q1=0 -> 1.0:(a1'=1);
    [action] s0=0 & q0=1 & q1=1 -> 1.0:(a1'=1);
    [action] s0=0 & q0=1 & q1=2 -> 1.0:(a1'=1);
    [action] s0=0 & q0=2 & q1=0 -> 1.0:(a1'=1);
    [action] s0=0 & q0=2 & q1=1 -> 1.0:(a1'=1);
    [action] s0=0 & q0=2 & q1=2 -> 1.0:(a1'=1);
    [action] s0=1 & q0=0 & q1=0 -> 1.0:(a1'=1);
    [action] s0=1 & q0=0 & q1=1 -> 1.0:(a1'=1);
    [action] s0=1 & q0=0 & q1=2 -> 1.0:(a1'=1);
    [action] s0=1 & q0=1 & q1=0 -> 1.0:(a1'=0);
    [action] s0=1 & q0=1 & q1=1 -> 1.0:(a1'=0);
    [action] s0=1 & q0=1 & q1=2 -> 1.0:(a1'=1);
    [action] s0=1 & q0=2 & q1=0 -> 1.0:(a1'=1);
    [action] s0=1 & q0=2 & q1=1 -> 1.0:(a1'=1);
    [action] s0=1 & q0=2 & q1=2 -> 1.0:(a1'=1);

endmodule


module ACTION_2

    a2 : [-1..3] init -1;
    [action] s0=0 & q0=0 & q1=0 -> 1.0:(a2'=eps_1_1);
    [action] s0=0 & q0=0 & q1=1 -> 1.0:(a2'=eps_1_1);
    [action] s0=0 & q0=0 & q1=2 -> 1.0:(a2'=eps_1_1);
    [action] s0=0 & q0=1 & q1=0 -> 1.0:(a2'=eps_1_1);
    [action] s0=0 & q0=1 & q1=1 -> 1.0:(a2'=eps_1_1);
    [action] s0=0 & q0=1 & q1=2 -> 1.0:(a2'=eps_1_1);
    [action] s0=0 & q0=2 & q1=0 -> 1.0:(a2'=eps_1_1);
    [action] s0=0 & q0=2 & q1=1 -> 1.0:(a2'=eps_1_1);
    [action] s0=0 & q0=2 & q1=2 -> 1.0:(a2'=eps_1_1);
    [action] s0=1 & q0=0 & q1=0 -> 1.0:(a2'=eps_1_1);
    [action] s0=1 & q0=0 & q1=1 -> 1.0:(a2'=eps_1_1);
    [action] s0=1 & q0=0 & q1=2 -> 1.0:(a2'=eps_1_1);
    [action] s0=1 & q0=1 & q1=0 -> 1.0:(a2'=eps_1_1);
    [action] s0=1 & q0=1 & q1=1 -> 1.0:(a2'=eps_1_1);
    [action] s0=1 & q0=1 & q1=2 -> 1.0:(a2'=eps_1_1);
    [action] s0=1 & q0=2 & q1=0 -> 1.0:(a2'=eps_1_1);
    [action] s0=1 & q0=2 & q1=1 -> 1.0:(a2'=eps_1_1);
    [action] s0=1 & q0=2 & q1=2 -> 1.0:(a2'=eps_1_1);

endmodule


formula phi = ((s0 = 1));
label "phi" = phi;
formula psi = ((s0 = 1));
label "psi" = psi;
formula chi = ((s0 = 1));
label "chi" = chi;
formula xi = ((s0 = 1));
label "xi" = xi;
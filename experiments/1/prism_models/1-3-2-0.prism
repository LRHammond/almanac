mdp




module INIT

    i : bool init false;
    [initialisation] !i -> 1.0:(i'=true);

endmodule


module SYNC

    t : bool init true;
    [initialisation] !i -> 1.0:(t' = false);
    [action] !t -> 1.0:(t' = true);
    [transition] t -> 1.0:(t' = false);

endmodule


module STATE_0

    s0 : [0..2] init 2;
    [initialisation] !i -> 0.7501926422119141:(s0'=0) + 0.24980735778808594:(s0'=1);
    [transition] true & (a0=0 & a1=0 & a2=0) -> ((0.0*s0)/max(0.0, (0.0*s0))):(s0'=1) + (1.0 - ((0.0*s0)/max(0.0, (0.0*s0)))):(s0'=0);
    [transition] true & (a0=1 & a1=0 & a2=0) -> ((0.0*s0)/max(0.0, (0.0*s0))):(s0'=1) + (1.0 - ((0.0*s0)/max(0.0, (0.0*s0)))):(s0'=0);
    [transition] true & (a0=0 & a1=1 & a2=0) -> ((0.9789005517959595*s0)/max(0.0, (0.9789005517959595*s0))):(s0'=1) + (1.0 - ((0.9789005517959595*s0)/max(0.0, (0.9789005517959595*s0)))):(s0'=0);
    [transition] true & (a0=1 & a1=1 & a2=0) -> ((0.0*s0)/max(0.0, (0.0*s0))):(s0'=1) + (1.0 - ((0.0*s0)/max(0.0, (0.0*s0)))):(s0'=0);
    [transition] true & (a0=0 & a1=0 & a2=1) -> ((0.0*s0)/max(0.0, (0.0*s0))):(s0'=1) + (1.0 - ((0.0*s0)/max(0.0, (0.0*s0)))):(s0'=0);
    [transition] true & (a0=1 & a1=0 & a2=1) -> ((0.0*s0)/max(0.0, (0.0*s0))):(s0'=1) + (1.0 - ((0.0*s0)/max(0.0, (0.0*s0)))):(s0'=0);
    [transition] true & (a0=0 & a1=1 & a2=1) -> ((0.0*s0)/max(0.0, (0.0*s0))):(s0'=1) + (1.0 - ((0.0*s0)/max(0.0, (0.0*s0)))):(s0'=0);
    [transition] true & (a0=1 & a1=1 & a2=1) -> ((1.0*s0)/max(0.0, (1.0*s0))):(s0'=1) + (1.0 - ((1.0*s0)/max(0.0, (1.0*s0)))):(s0'=0);
    [transition] true & (a0=0 & a1=0 & a2=2) -> ((0.0*s0)/max(0.0, (0.0*s0))):(s0'=1) + (1.0 - ((0.0*s0)/max(0.0, (0.0*s0)))):(s0'=0);
    [transition] true & (a0=1 & a1=0 & a2=2) -> ((1.0*s0)/max(0.0, (1.0*s0))):(s0'=1) + (1.0 - ((1.0*s0)/max(0.0, (1.0*s0)))):(s0'=0);
    [transition] true & (a0=0 & a1=1 & a2=2) -> ((0.9789005517959595*s0)/max(0.0, (0.9789005517959595*s0))):(s0'=1) + (1.0 - ((0.9789005517959595*s0)/max(0.0, (0.9789005517959595*s0)))):(s0'=0);
    [transition] true & (a0=1 & a1=1 & a2=2) -> ((0.0*s0)/max(0.0, (0.0*s0))):(s0'=1) + (1.0 - ((0.0*s0)/max(0.0, (0.0*s0)))):(s0'=0);
    [transition] true & (a0=0 & a1=0 & a2=3) -> ((0.0*s0)/max(0.0, (0.0*s0))):(s0'=1) + (1.0 - ((0.0*s0)/max(0.0, (0.0*s0)))):(s0'=0);
    [transition] true & (a0=1 & a1=0 & a2=3) -> ((1.0*s0)/max(0.0, (1.0*s0))):(s0'=1) + (1.0 - ((1.0*s0)/max(0.0, (1.0*s0)))):(s0'=0);
    [transition] true & (a0=0 & a1=1 & a2=3) -> ((0.9789005517959595*s0)/max(0.0, (0.9789005517959595*s0))):(s0'=1) + (1.0 - ((0.9789005517959595*s0)/max(0.0, (0.9789005517959595*s0)))):(s0'=0);
    [transition] true & (a0=1 & a1=1 & a2=3) -> ((0.0*s0)/max(0.0, (0.0*s0))):(s0'=1) + (1.0 - ((0.0*s0)/max(0.0, (0.0*s0)))):(s0'=0);

endmodule

// (!xi) U psi
module SPEC_0

    q0 : [0..2] init 0;
    [transition] q0=0 & !xi & !psi -> 1.0:(q0'=0);
    [transition] q0=0 & !xi & psi -> 1.0:(q0'=1);
    [transition] q0=0 & xi & !psi -> 1.0:(q0'=2);
    [transition] q0=0 & xi & psi -> 1.0:(q0'=1);
    [transition] q0=1 & !xi & !psi -> 1.0:(q0'=1);
    [transition] q0=1 & !xi & psi -> 1.0:(q0'=1);
    [transition] q0=1 & xi & !psi -> 1.0:(q0'=1);
    [transition] q0=1 & xi & psi -> 1.0:(q0'=1);
    [transition] q0=2 & !xi & !psi -> 1.0:(q0'=2);
    [transition] q0=2 & !xi & psi -> 1.0:(q0'=2);
    [transition] q0=2 & xi & !psi -> 1.0:(q0'=2);
    [transition] q0=2 & xi & psi -> 1.0:(q0'=2);

endmodule

// F xi
module SPEC_1

    q1 : [0..2] init 0;
    [transition] q1=0 & !xi -> 1.0:(q1'=0);
    [transition] q1=0 & xi -> 1.0:(q1'=1);
    [transition] q1=1 & !xi -> 1.0:(q1'=1);
    [transition] q1=1 & xi -> 1.0:(q1'=1);
    [transition] q1=2 & !xi -> 1.0:(q1'=2);
    [transition] q1=2 & xi -> 1.0:(q1'=2);

endmodule


module ACTION_0

    a0 : [-1..3] init -1;
    [action] true -> 1.0:(a0'=0);
    [action] true -> 1.0:(a0'=1);

endmodule


module ACTION_1

    a1 : [-1..3] init -1;
    [action] true -> 1.0:(a1'=0);
    [action] true -> 1.0:(a1'=1);

endmodule


module ACTION_2

    a2 : [-1..3] init -1;
    [action] true -> 1.0:(a2'=0);
    [action] true -> 1.0:(a2'=1);
    [action] true -> 1.0:(a2'=2);
    [action] true -> 1.0:(a2'=3);

endmodule


formula phi = ((s0 = 1));
label "phi" = phi;
formula psi = ((s0 = 1));
label "psi" = psi;
formula chi = ((s0 = 1));
label "chi" = chi;
formula xi = ((s0 = 1));
label "xi" = xi;